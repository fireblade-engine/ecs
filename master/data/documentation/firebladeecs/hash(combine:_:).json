{
  "abstract" : [
    {
      "text" : "Calculates the combined hash of two values.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/com.github.fireblade-engine.FirebladeECS\/documentation\/FirebladeECS"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/com.github.fireblade-engine.FirebladeECS\/documentation\/FirebladeECS\/hash(combine:_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:12FirebladeECS4hash7combine_S2i_SitF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "hash"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "combine"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      }
    ],
    "modules" : [
      {
        "name" : "FirebladeECS"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Function",
    "symbolKind" : "func",
    "title" : "hash(combine:_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "hash"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "combine"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "seed"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Si",
              "text" : "Int"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "value"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Si",
              "text" : "Int"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Si",
              "text" : "Int"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Seed hash.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "seed"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Value to be combined with seed hash.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "value"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Combined hash value.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This implementation is based on boost::hash_combine.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "It produces the same result for the same combination of seed and value during the single run of a program.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Hash-Functions",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.github.fireblade-engine.FirebladeECS\/documentation\/FirebladeECS\/hash(combine:)",
        "doc:\/\/com.github.fireblade-engine.FirebladeECS\/documentation\/FirebladeECS\/StringHashing"
      ],
      "title" : "Hash Functions"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/firebladeecs\/hash(combine:_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://com.github.fireblade-engine.FirebladeECS/documentation/FirebladeECS": {
  "abstract" : [
    {
      "text" : "Seamlessly, consistently, and asynchronously replicate data.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.fireblade-engine.FirebladeECS\/documentation\/FirebladeECS",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FirebladeECS",
  "type" : "topic",
  "url" : "\/documentation\/firebladeecs"
},
"doc://com.github.fireblade-engine.FirebladeECS/documentation/FirebladeECS/StringHashing": {
  "abstract" : [
    {
      "text" : "A type that provides stable hash values for String.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StringHashing"
    }
  ],
  "identifier" : "doc:\/\/com.github.fireblade-engine.FirebladeECS\/documentation\/FirebladeECS\/StringHashing",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "StringHashing"
    }
  ],
  "role" : "symbol",
  "title" : "StringHashing",
  "type" : "topic",
  "url" : "\/documentation\/firebladeecs\/stringhashing"
},
"doc://com.github.fireblade-engine.FirebladeECS/documentation/FirebladeECS/hash(combine:)": {
  "abstract" : [
    {
      "text" : "Calculates the combined hash value of the elements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hash"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "H"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "combine"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "H"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/com.github.fireblade-engine.FirebladeECS\/documentation\/FirebladeECS\/hash(combine:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hash(combine:)",
  "type" : "topic",
  "url" : "\/documentation\/firebladeecs\/hash(combine:)"
},
"doc://com.github.fireblade-engine.FirebladeECS/documentation/FirebladeECS/hash(combine:_:)": {
  "abstract" : [
    {
      "text" : "Calculates the combined hash of two values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hash"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "combine"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/com.github.fireblade-engine.FirebladeECS\/documentation\/FirebladeECS\/hash(combine:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hash(combine:_:)",
  "type" : "topic",
  "url" : "\/documentation\/firebladeecs\/hash(combine:_:)"
}
}
}